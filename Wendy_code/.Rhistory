result <- result %>%
mutate(tooltip = paste0(
"<b>State:</b> ", State_name, "<br>",
"<b>Ethnicity:</b> ", "Black", "<br>",
"<b>Difference:</b> ", Black, "<br>",
"<br>Trump Win:", trump_win
))
bar_interactive <- ggplot(result, aes(x = fct_reorder(as.factor(State), Black),
y = Black,
fill = Black > 0)) +
geom_bar_interactive(stat = "identity",
aes(tooltip = tooltip, data_id = State),
show.legend = FALSE) +
scale_fill_manual(values = c("pink", "lightblue")) + # Red for negative, blue for positive
labs(title = "Top5 and Bottom 5 Difference",
x = "States",
y = "Percentage") +
theme_minimal()
# Render the ggiraph plot
girafe(ggobj = bar_interactive)
subset <- plotting_data %>%
select(State, State_name, Black, trump_win) %>%
arrange(Black)
top_5 <- subset %>%
arrange(desc(Black)) %>%  # Sort in descending order
slice(1:5)               # Select the top 5 rows
bottom_5 <- subset %>%
arrange(Black) %>%
slice(1:5)
# Combine the results
result <- bind_rows(top_5, bottom_5)
result <- result %>%
mutate(tooltip = paste0(
"<b>State:</b> ", State_name, "<br>",
"<b>Ethnicity:</b> ", "Black", "<br>",
"<b>Difference:</b> ", Black, "<br>",
"<br>Trump Win:</b>:", trump_win
))
bar_interactive <- ggplot(result, aes(x = fct_reorder(as.factor(State), Black),
y = Black,
fill = Black > 0)) +
geom_bar_interactive(stat = "identity",
aes(tooltip = tooltip, data_id = State),
show.legend = FALSE) +
scale_fill_manual(values = c("pink", "lightblue")) + # Red for negative, blue for positive
labs(title = "Top5 and Bottom 5 Difference",
x = "States",
y = "Percentage") +
theme_minimal()
# Render the ggiraph plot
girafe(ggobj = bar_interactive)
library(ggiraph)
library(htmltools)
library(patchwork)
combined_plot <- (geo_interactive_plot / bar_interactive) + plot_layout(heights = c(3,1))
interactive_combined_plot <- girafe(ggobj = combined_plot)
# Apply hover options if needed
interactive_combined_plot <- girafe_options(
interactive_combined_plot,
opts_hover(css = "fill:red;stroke:black;")
)
# Render the interactive plot
interactive_combined_plot
library(tidyverse)
library(tigris)
library(ggplot2)
library(sf)
library(tidycensus)
library(ggplot2)
library(sf)
library(dplyr)
library(ggiraph)
library(openxlsx)
#Load Data
data = read.csv("Provisional_COVID-19_Deaths_by_County__and_Race_and_Hispanic_Origin_20241120.csv")
#Fill in NA values with 0
Covid_death = subset(data, Indicator == "Distribution of COVID-19 deaths (%)")
Covid_death[is.na(Covid_death)] <- 0
#column_names <- colnames(Joined_summary)
#print(column_names)
# Multiply specified columns by 'CIVID.19.Deaths' column in an R data frame
Covid_death[c('Non.Hispanic.White', 'Non.Hispanic.Black', 'Non.Hispanic.American.Indian.or.Alaska.Native',
'Non.Hispanic.Asian', 'Non.Hispanic.Native.Hawaiian.or.Other.Pacific.Islander', 'Hispanic')] <-
Covid_death[c('Non.Hispanic.White', 'Non.Hispanic.Black', 'Non.Hispanic.American.Indian.or.Alaska.Native',
'Non.Hispanic.Asian', 'Non.Hispanic.Native.Hawaiian.or.Other.Pacific.Islander', 'Hispanic')] *
Covid_death$COVID.19.Deaths
#Calculate total count
Total_ethnic_count <- Covid_death %>%
group_by(State) %>%
summarize(
total_covid = sum(COVID.19.Deaths, na.rm = TRUE),
White = sum(Non.Hispanic.White, na.rm = TRUE),
Black = sum(Non.Hispanic.Black, na.rm = TRUE),
Native_American = sum(Non.Hispanic.American.Indian.or.Alaska.Native, na.rm = TRUE),
Asian = sum(Non.Hispanic.Asian, na.rm = TRUE),
Pacific_Islander = sum(Non.Hispanic.Native.Hawaiian.or.Other.Pacific.Islander, na.rm = TRUE),
Hispanic = sum(Hispanic, na.rm = TRUE)
)
#Make sure the ethnicity are in percentage
Total_ethnic_count[c("White", "Black", "Native_American", "Asian", "Pacific_Islander", "Hispanic")] <- round( Total_ethnic_count[c("White", "Black", "Native_American", "Asian", "Pacific_Islander", "Hispanic")] *100 / Total_ethnic_count$total_covid,2)
covid_ethnic_percent <- Total_ethnic_count %>%
select(State, White, Black, Native_American, Asian, Pacific_Islander, Hispanic) %>%
arrange(State)
#Calculate the total population for the states--------
race_data <- read.csv("Single-Race Population Estimates 2020-2022 by State and Single-Year Age-2.txt",sep = "\t", header = TRUE)
#total_population <- subset(race_data, Notes == "Total" & Ethnicity == '' & !is.na(States.Code))
#total_population <- total_population[c('States', 'Population')]
#Total population
total_population <- race_data %>%
filter(Notes == "Total", Ethnicity == "", !is.na(States.Code)) %>%
select(States, Population)
#Total Latino
Latino_total <- race_data %>%
filter(Ethnicity == "Hispanic or Latino", Notes == "Total") %>%
select(States, Population) %>%
rename(Latino = Population)
#Other Race
pivoted_race <- race_data %>%
filter(Ethnicity == "Not Hispanic or Latino" & Race != '') %>%
select(States, Race, Population) %>%
pivot_wider(names_from = Race, values_from = Population)
Joined_race <- total_population %>%
full_join(pivoted_race, by = 'States') %>%
full_join(Latino_total, by = 'States')
#Percentage
Joined_race[c("White", "Black or African American", "American Indian or Alaska Native", "Asian", "Native Hawaiian or Other Pacific Islander", "Latino")] <- round(Joined_race[c("White", "Black or African American", "American Indian or Alaska Native", "Asian", "Native Hawaiian or Other Pacific Islander", "Latino")] *100 / Joined_race$Population, 2)
#Change column name and change column order
Joined_race_edited <- Joined_race %>%
rename(
Black = 'Black or African American',
Native_American = 'American Indian or Alaska Native',
Pacific_Islander = 'Native Hawaiian or Other Pacific Islander'
) %>%
select(States, White, Black, Native_American, Asian, Pacific_Islander, Latino)
#column_names <- colnames(Joined_race)
#print(column_names)
#Make a dictionary to transform the state name to abbreviation
state_dict <- c(
"Alabama" = "AL",
"Alaska" = "AK",
"Arizona" = "AZ",
"Arkansas" = "AR",
"California" = "CA",
"Colorado" = "CO",
"Connecticut" = "CT",
"Delaware" = "DE",
"District of Columbia" = "DC",
"Florida" = "FL",
"Georgia" = "GA",
"Hawaii" = "HI",
"Idaho" = "ID",
"Illinois" = "IL",
"Indiana" = "IN",
"Iowa" = "IA",
"Kansas" = "KS",
"Kentucky" = "KY",
"Louisiana" = "LA",
"Maine" = "ME",
"Maryland" = "MD",
"Massachusetts" = "MA",
"Michigan" = "MI",
"Minnesota" = "MN",
"Mississippi" = "MS",
"Missouri" = "MO",
"Montana" = "MT",
"Nebraska" = "NE",
"Nevada" = "NV",
"New Hampshire" = "NH",
"New Jersey" = "NJ",
"New Mexico" = "NM",
"New York" = "NY",
"North Carolina" = "NC",
"North Dakota" = "ND",
"Ohio" = "OH",
"Oklahoma" = "OK",
"Oregon" = "OR",
"Pennsylvania" = "PA",
"Rhode Island" = "RI",
"South Carolina" = "SC",
"South Dakota" = "SD",
"Tennessee" = "TN",
"Texas" = "TX",
"Utah" = "UT",
"Vermont" = "VT",
"Virginia" = "VA",
"Washington" = "WA",
"West Virginia" = "WV",
"Wisconsin" = "WI",
"Wyoming" = "WY"
)
Joined_race_edited$State_name <- Joined_race_edited$States
Joined_race_edited$States <- state_dict[Joined_race_edited$States]
Joined_race_edited <- Joined_race_edited %>%
arrange(States)
#Creating the state dataframe
state_df <- data.frame(State = Joined_race_edited$States)
state_df$State_name <- Joined_race_edited$State_name
#remove State full name for substraction
Joined_race_edited <- within(Joined_race_edited, rm(State_name))
library(openxlsx)
#Creating the plotting data
plotting_data <- covid_ethnic_percent[, !names(covid_ethnic_percent) %in% "State"] - Joined_race_edited[, !names(Joined_race_edited) %in% "States"]
#merge data with numeric result
plotting_data <- cbind(state_df, plotting_data)
plotting_data <- plotting_data %>%
mutate(across(where(is.numeric), ~ round(., 2)))
#save it as a csv
#write.xlsx(plotting_data, "Plotting_data.xlsx", rowNames = FALSE)
shiny_data <- read.csv("Plotting_data.csv")
#shiny_data <- read.csv("Plotting_data.csv")
#selection <- colnames(shiny_data)
#rint(selection)
#selection_list = c("White", "Black", "Native_American", "Asian", "Pacific_Islander", "Hispanic")
shiny::runApp('~/Desktop/Group_Shiny_Testing')
View(interactive_combined_plot)
View(geo_interactive_plot)
View(Joined_race_edited)
View(plotting_data)
plotting_data <- read.xlsx("Plotting_data.xlsx")
selection_list <- c("White", "Black", "Native_American", "Asian", "Pacific_Islander", "Hispanic")
election_data = read.csv("us_election_2020.csv")
election_data <- election_data %>%
select(c(state_abr, trump_win))
plotting_data <- plotting_data %>%
inner_join(election_data, by = c("State" = "state_abr"))
View(plotting_data)
runApp('~/Desktop/Group_Shiny_Testing')
plotting_data = read.xlsx("Plotting_data.xlsx")
election_data = read.csv("us_election_2020.csv")
election_data <- election_data %>%
select(c(state_abr, trump_win))
plotting_data <- plotting_data %>%
inner_join(election_data, by = c("State" = "state_abr"))
US_state_hexgrid <- sf::st_read("us_states_hexgrid.geojson")
US_state_hexgrid <- US_state_hexgrid %>%
rename(State = 'iso3166_2')
geo_data <- US_state_hexgrid %>%
inner_join(plotting_data, by = c("State" = "State")) %>%
mutate(tooltip = paste0(
"<b>State:</b> ", State_name, "<br>",
"<b>Ethnicity:</b> ", "Black", "<br>",
"<b>Difference:</b> ", Black, "<br>",
"<b>Trump Win:", trump_win
))
geo_interactive_plot <- ggplot(geo_data) +
geom_sf_interactive(
aes(fill = Black, tooltip = tooltip, data_id = State),
color = "white"
)+
geom_sf_text(aes(label = State), color = "white", size = 3) +
scale_fill_distiller(palette = "YlGnBu", name = "Index value")+
#scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, name = "") +
labs(title = "Percentage of Death and Percentage of Populatoin Difference",
subtitle = "A visualization of how covid affect different ethnicity",
caption = "Source: Center of Disease Control") +
theme_void()+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
plot.subtitle = element_text(hjust = 0.5, face = "bold", size = 13),
legend.position = "bottom",
legend.key.width = unit(2, "cm"),
legend.key.height = unit(0.5, "cm"))
# Render the interactive plot
girafe(ggobj = geo_interactive_plot)
runApp('~/Desktop/Group_Shiny_Testing')
runApp('~/Desktop/Group_Shiny_Testing')
library(tidyverse)
library(tigris)
library(ggplot2)
library(sf)
library(tidycensus)
library(ggplot2)
library(sf)
library(dplyr)
library(ggiraph)
library(openxlsx)
library(tidyverse)
library(tigris)
library(ggplot2)
library(sf)
library(tidycensus)
library(ggplot2)
library(sf)
library(dplyr)
library(ggiraph)
library(openxlsx)
#Load Data
data = read.csv("../Data/rovisional_COVID-19_Deaths_by_County__and_Race_and_Hispanic_Origin_20241120.csv")
#Load Data
data = read.csv("../Data/provisional_COVID-19_Deaths_by_County__and_Race_and_Hispanic_Origin_20241120.csv")
#Fill in NA values with 0
Covid_death = subset(data, Indicator == "Distribution of COVID-19 deaths (%)")
Covid_death[is.na(Covid_death)] <- 0
#column_names <- colnames(Joined_summary)
#print(column_names)
# Multiply specified columns by 'CIVID.19.Deaths' column in an R data frame
Covid_death[c('Non.Hispanic.White', 'Non.Hispanic.Black', 'Non.Hispanic.American.Indian.or.Alaska.Native',
'Non.Hispanic.Asian', 'Non.Hispanic.Native.Hawaiian.or.Other.Pacific.Islander', 'Hispanic')] <-
Covid_death[c('Non.Hispanic.White', 'Non.Hispanic.Black', 'Non.Hispanic.American.Indian.or.Alaska.Native',
'Non.Hispanic.Asian', 'Non.Hispanic.Native.Hawaiian.or.Other.Pacific.Islander', 'Hispanic')] *
Covid_death$COVID.19.Deaths
#Calculate total count
Total_ethnic_count <- Covid_death %>%
group_by(State) %>%
summarize(
total_covid = sum(COVID.19.Deaths, na.rm = TRUE),
White = sum(Non.Hispanic.White, na.rm = TRUE),
Black = sum(Non.Hispanic.Black, na.rm = TRUE),
Native_American = sum(Non.Hispanic.American.Indian.or.Alaska.Native, na.rm = TRUE),
Asian = sum(Non.Hispanic.Asian, na.rm = TRUE),
Pacific_Islander = sum(Non.Hispanic.Native.Hawaiian.or.Other.Pacific.Islander, na.rm = TRUE),
Hispanic = sum(Hispanic, na.rm = TRUE)
)
#Make sure the ethnicity are in percentage
Total_ethnic_count[c("White", "Black", "Native_American", "Asian", "Pacific_Islander", "Hispanic")] <- round( Total_ethnic_count[c("White", "Black", "Native_American", "Asian", "Pacific_Islander", "Hispanic")] *100 / Total_ethnic_count$total_covid,2)
covid_ethnic_percent <- Total_ethnic_count %>%
select(State, White, Black, Native_American, Asian, Pacific_Islander, Hispanic) %>%
arrange(State)
#Calculate the total population for the states--------
race_data <- read.csv("../Data/Single-Race Population Estimates 2020-2022 by State and Single-Year Age-2.txt",sep = "\t", header = TRUE)
#total_population <- subset(race_data, Notes == "Total" & Ethnicity == '' & !is.na(States.Code))
#total_population <- total_population[c('States', 'Population')]
#Total population
total_population <- race_data %>%
filter(Notes == "Total", Ethnicity == "", !is.na(States.Code)) %>%
select(States, Population)
#Total Latino
Latino_total <- race_data %>%
filter(Ethnicity == "Hispanic or Latino", Notes == "Total") %>%
select(States, Population) %>%
rename(Latino = Population)
#Other Race
pivoted_race <- race_data %>%
filter(Ethnicity == "Not Hispanic or Latino" & Race != '') %>%
select(States, Race, Population) %>%
pivot_wider(names_from = Race, values_from = Population)
Joined_race <- total_population %>%
full_join(pivoted_race, by = 'States') %>%
full_join(Latino_total, by = 'States')
#Percentage
Joined_race[c("White", "Black or African American", "American Indian or Alaska Native", "Asian", "Native Hawaiian or Other Pacific Islander", "Latino")] <- round(Joined_race[c("White", "Black or African American", "American Indian or Alaska Native", "Asian", "Native Hawaiian or Other Pacific Islander", "Latino")] *100 / Joined_race$Population, 2)
#Change column name and change column order
Joined_race_edited <- Joined_race %>%
rename(
Black = 'Black or African American',
Native_American = 'American Indian or Alaska Native',
Pacific_Islander = 'Native Hawaiian or Other Pacific Islander'
) %>%
select(States, White, Black, Native_American, Asian, Pacific_Islander, Latino)
#column_names <- colnames(Joined_race)
#print(column_names)
#Make a dictionary to transform the state name to abbreviation
state_dict <- c(
"Alabama" = "AL",
"Alaska" = "AK",
"Arizona" = "AZ",
"Arkansas" = "AR",
"California" = "CA",
"Colorado" = "CO",
"Connecticut" = "CT",
"Delaware" = "DE",
"District of Columbia" = "DC",
"Florida" = "FL",
"Georgia" = "GA",
"Hawaii" = "HI",
"Idaho" = "ID",
"Illinois" = "IL",
"Indiana" = "IN",
"Iowa" = "IA",
"Kansas" = "KS",
"Kentucky" = "KY",
"Louisiana" = "LA",
"Maine" = "ME",
"Maryland" = "MD",
"Massachusetts" = "MA",
"Michigan" = "MI",
"Minnesota" = "MN",
"Mississippi" = "MS",
"Missouri" = "MO",
"Montana" = "MT",
"Nebraska" = "NE",
"Nevada" = "NV",
"New Hampshire" = "NH",
"New Jersey" = "NJ",
"New Mexico" = "NM",
"New York" = "NY",
"North Carolina" = "NC",
"North Dakota" = "ND",
"Ohio" = "OH",
"Oklahoma" = "OK",
"Oregon" = "OR",
"Pennsylvania" = "PA",
"Rhode Island" = "RI",
"South Carolina" = "SC",
"South Dakota" = "SD",
"Tennessee" = "TN",
"Texas" = "TX",
"Utah" = "UT",
"Vermont" = "VT",
"Virginia" = "VA",
"Washington" = "WA",
"West Virginia" = "WV",
"Wisconsin" = "WI",
"Wyoming" = "WY"
)
Joined_race_edited$State_name <- Joined_race_edited$States
Joined_race_edited$States <- state_dict[Joined_race_edited$States]
Joined_race_edited <- Joined_race_edited %>%
arrange(States)
#Creating the state dataframe
state_df <- data.frame(State = Joined_race_edited$States)
state_df$State_name <- Joined_race_edited$State_name
#remove State full name for substraction
Joined_race_edited <- within(Joined_race_edited, rm(State_name))
library(openxlsx)
#Creating the plotting data
plotting_data <- covid_ethnic_percent[, !names(covid_ethnic_percent) %in% "State"] - Joined_race_edited[, !names(Joined_race_edited) %in% "States"]
#merge data with numeric result
plotting_data <- cbind(state_df, plotting_data)
plotting_data <- plotting_data %>%
mutate(across(where(is.numeric), ~ round(., 2)))
#save it as a csv
#write.xlsx(plotting_data, "Plotting_data.xlsx", rowNames = FALSE)
#shiny_data <- read.csv("Plotting_data.csv")
#selection <- colnames(shiny_data)
#rint(selection)
#selection_list = c("White", "Black", "Native_American", "Asian", "Pacific_Islander", "Hispanic")
plotting_data = read.xlsx("Plotting_data.xlsx")
election_data = read.csv("us_election_2020.csv")
election_data <- election_data %>%
select(c(state_abr, trump_win))
plotting_data <- plotting_data %>%
inner_join(election_data, by = c("State" = "state_abr"))
US_state_hexgrid <- sf::st_read("us_states_hexgrid.geojson")
plotting_data = read.xlsx("Plotting_data.xlsx")
#election_data = read.csv("../Data/us_election_2020.csv")
election_data <- election_data %>%
select(c(state_abr, trump_win))
plotting_data <- plotting_data %>%
inner_join(election_data, by = c("State" = "state_abr"))
US_state_hexgrid <- sf::st_read("../Data/us_states_hexgrid.geojson")
US_state_hexgrid <- US_state_hexgrid %>%
rename(State = 'iso3166_2')
geo_data <- US_state_hexgrid %>%
inner_join(plotting_data, by = c("State" = "State")) %>%
mutate(tooltip = paste0(
"<b>State:</b> ", State_name, "<br>",
"<b>Ethnicity:</b> ", "Black", "<br>",
"<b>Difference:</b> ", Black, "<br>",
"<b>Trump Win:", trump_win
))
geo_interactive_plot <- ggplot(geo_data) +
geom_sf_interactive(
aes(fill = Black, tooltip = tooltip, data_id = State),
color = "white"
)+
geom_sf_text(aes(label = State), color = "white", size = 3) +
scale_fill_distiller(palette = "YlGnBu", name = "Index value")+
#scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, name = "") +
labs(title = "Percentage of Death and Percentage of Populatoin Difference",
subtitle = "A visualization of how covid affect different ethnicity",
caption = "Source: Center of Disease Control") +
theme_void()+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
plot.subtitle = element_text(hjust = 0.5, face = "bold", size = 13),
legend.position = "bottom",
legend.key.width = unit(2, "cm"),
legend.key.height = unit(0.5, "cm"))
# Render the interactive plot
girafe(ggobj = geo_interactive_plot)
subset <- plotting_data %>%
select(State, State_name, Black, trump_win) %>%
arrange(Black)
top_5 <- subset %>%
arrange(desc(Black)) %>%  # Sort in descending order
slice(1:5)               # Select the top 5 rows
bottom_5 <- subset %>%
arrange(Black) %>%
slice(1:5)
# Combine the results
result <- bind_rows(top_5, bottom_5)
result <- result %>%
mutate(tooltip = paste0(
"<b>State:</b> ", State_name, "<br>",
"<b>Ethnicity:</b> ", "Black", "<br>",
"<b>Difference:</b> ", Black, "<br>",
"<br>Trump Win:</b>:", trump_win
))
bar_interactive <- ggplot(result, aes(x = fct_reorder(as.factor(State), Black),
y = Black,
fill = Black > 0)) +
geom_bar_interactive(stat = "identity",
aes(tooltip = tooltip, data_id = State),
show.legend = FALSE) +
scale_fill_manual(values = c("pink", "lightblue")) + # Red for negative, blue for positive
labs(title = "Top5 and Bottom 5 Difference",
x = "States",
y = "Percentage") +
theme_minimal()
# Render the ggiraph plot
girafe(ggobj = bar_interactive)
library(ggiraph)
library(htmltools)
library(patchwork)
combined_plot <- (geo_interactive_plot / bar_interactive) + plot_layout(heights = c(3,1))
interactive_combined_plot <- girafe(ggobj = combined_plot)
# Apply hover options if needed
interactive_combined_plot <- girafe_options(
interactive_combined_plot,
opts_hover(css = "fill:red;stroke:black;")
)
# Render the interactive plot
interactive_combined_plot
